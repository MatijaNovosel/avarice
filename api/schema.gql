# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type GTag {
  id: Int!

  """Tag description"""
  description: String
}

type GFinancialChange {
  id: Int!
  amount: Float!
  createdAt: String!
  description: String!
  expense: Boolean!
  paymentSourceId: Int!
  tagIds: [Int!]!
}

type GAppsetting {
  id: Int!
  checkingGraphColor: String!
  gyroGraphColor: String!
  pocketGraphColor: String!
  totalGraphColor: String!
  gyroGraphVisible: Boolean!
  checkingGraphVisible: Boolean!
  pocketGraphVisible: Boolean!
  totalGraphVisible: Boolean!
  appUserId: Int!
}

type GAppUser {
  id: Int!
  uid: String!
  email: String!
  photoUrl: String!
  password: String!
  displayName: String!
}

type GFinancialHistory {
  id: Int!
  createdAt: String!
  checking: Float!
  gyro: Float!
  pocket: Float!
  total: Float!
  euros: Float!
  appUserId: Float!
}

type AccessToken {
  accessToken: String!
}

type Query {
  financialHistory(id: Float!): [GFinancialHistory!]!
  appUser(id: Int!): GAppUser!
  appSettings(userId: Int!): GAppsetting!
  financialChanges(id: Int!): [GFinancialChange!]!
  tags: [GTag!]!
}

type Mutation {
  login(input: AuthEmailLoginInputType!): AccessToken!
  googleLogin(input: AuthGoogleLoginInputType!): AccessToken!
  register(input: AuthRegisterInputType!): Int!
  addUser(user: AppUserInputType!): Int!
  updateUserAppSetting(appSetting: AppSettingInputType!): Void
  addFinancialChange(financialChange: FinancialChangeInputType!): Void
  create(description: String!): Int!
  delete(id: Int!): Void
}

input AuthEmailLoginInputType {
  email: String!
  password: String!
}

input AuthGoogleLoginInputType {
  uid: String!
  email: String!
  photoUrl: String!
  displayName: String!
}

input AuthRegisterInputType {
  email: String!
  password: String!
}

input AppUserInputType {
  uid: String
  email: String!
  photoUrl: String
  displayName: String!
}

"""Represents no return value."""
scalar Void

input AppSettingInputType {
  checkingGraphColor: String
  gyroGraphColor: String
  pocketGraphColor: String
  totalGraphColor: String
  gyroGraphVisible: Boolean
  checkingGraphVisible: Boolean
  pocketGraphVisible: Boolean
  totalGraphVisible: Boolean
  appUserId: Int!
}

input FinancialChangeInputType {
  appUserId: Int!
  amount: Float!
  description: String!
  expense: Boolean!
  paymentSourceId: Int!
  tagIds: [Int!]!
}
